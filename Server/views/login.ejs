<!DOCTYPE html>
<html>
<head>
     <!-- Standard favicon -->
     <link rel="icon" type="image/png" sizes="32x32" href="images/Ecosense_Icon.png">
     <link rel="icon" type="image/png" sizes="16x16" href="images/Ecosense_Icon.png">
     <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
     <!-- Apple Touch Icon for iOS -->
     <link rel="apple-touch-icon" sizes="180x180" href="images/Ecosense_Icon.png">
     
     <!-- Android Chrome -->
     <link rel="icon" type="image/png" sizes="192x192" href="images/Ecosense_Icon.png">
     
     <!-- Safari pinned tab icon -->
     <link rel="mask-icon" href="images/Ecosense_icon.png" color="#5bbad5">
    <title>EcoSense</title>
    <link rel='stylesheet' href='/styles.css'>
    <link rel="stylesheet" href="/landingpageStyles.css">
    <link rel='stylesheet' href='/loginform.css'>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Jersey+25&family=Lobster&family=Lobster+Two:ital@1&family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    
</head>
<body>
    <header>
        <nav class="navbar" id = 'loginnav'>
            <div class="navbar-brand">
                <a href="/home" id = 'loginlogo'> <span class = 'withinlogo'>eco</span>Sense</a>
            </div>
            <ul class="navbar-nav">
              

            </ul>
        </nav>
    </header>

    <div class="container-login100">
        <div class="wrap-login100">
            <div class="login100-form-title" style="background-image: url(images/greenhouse.jpg);">
                <span class="login100-form-title-1" id = "loginheadertext">
                    Sign In
                </span>
            </div>
            <br>
            <br>
            <form class="login100-form validate-form" action="/login" method="POST">
               
              
                <div class="wrap-input100 validate-input m-b-26" data-validate="Username is required">
                    <span class="label-input100">Username</span>
                    <input class="input100" type="text" name="username" placeholder="Enter username" required>
                    <span class="focus-input100"></span>
                </div>

                <div class="wrap-input100 validate-input m-b-18" data-validate="Password is required">
                    <span class="label-input100">Password</span>
                    <input class="input100" type="password" name="password" placeholder="Enter password" required>
                    <span class="focus-input100"></span>
                </div>

                <div class="flex-sb-m w-full p-b-30">

                    <div class = 'beforeloginbutton'>


                        <a href="#" class="txt1">
                            Forgot Password?
                        </a>

                       
                        


                        <% if (typeof error !== 'undefined') { %>
                            <div class="error-message" id = "loginerrortext"><%= error %></div>
                        <% } %>
                    </div>
                </div>

                <div class="container-login100-form-btn">
                    <button class="login100-form-btn" id = 'login-button' type="submit">
                        Login
                    </button>

                    <a href="#" class="txt2" id="createAccountLink">
                            
                            
                        <button class="login100-form-btn"  id = 'createaccountbtn-login'>
                            Create Account
                        </button>
                      
                    </a>
                </div>

                
            </form>
        </div>
    </div>

    <style>
       
    </style>

    <script>
        document.getElementById('createAccountLink').addEventListener('click', function(event) {
    event.preventDefault();

    Swal.fire({
        title: 'Create an Account',
        html: `
            <style>
                .swal2-popup {
                    background-color: #242424 !important;
                    color: var(--text-color) !important;
                    width: 80%;
                    height: auto;
                }
                .swal2-input {
                    color: #ccc !important;
                    margin-bottom: 20px;
                }
                .swal2-title {
                    color: #ccc !important;
                }
                .swal2-confirm {
                    background: #ccc !important;
                    color: var(--input-text-color) !important;
                    border-radius: 5px !important;
                }
                .swal2-cancel {
                    background: #ccc !important;
                    color: var(--input-text-color) !important;
                    border-radius: 5px !important;
                }
            </style>
            <input id="username" class="swal2-input" placeholder="Username">
            <input id="password" class="swal2-input" placeholder="Password" type="password">
            <input id="phonenumber" class="swal2-input" placeholder="Phone Number" type="tel">
            <input id="sensorId" class="swal2-input" placeholder="Sensor ID">
        `,
        showCancelButton: true,
        confirmButtonText: 'Create Account',
        cancelButtonText: 'Cancel',
        preConfirm: () => {
            const username = document.getElementById('username').value;
            const password = document.getElementById('password').value;
            const phonenumber = document.getElementById('phonenumber').value;
            const sensorId = document.getElementById('sensorId').value;

            if (!username || !password || !sensorId || !phonenumber) {
                Swal.showValidationMessage('Please enter all fields');
                return false;
            }

            return { username,  password, phonenumber, sensorId };
        }
    }).then((result) => {
        if (result.isConfirmed) {
            const { username,  password, phonenumber, sensorId } = result.value;
            
            

            // Send data to the server to create the account and register the sensor
            fetch('/createAccount', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ username, password, phonenumber, sensorId })
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    Swal.fire('Success', 'Account created successfully.', 'success');
                } else {
                    Swal.fire('Error', data.message || 'Error creating account.', 'error');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire('Error', 'Error creating account.', 'error');
            });
        }
    });
});

    </script>
    
</body>
</html>
